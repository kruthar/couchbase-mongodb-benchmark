# -*- mode: ruby -*-
# # vi: set ft=ruby :

num_nodes = 9

machines = gen_machines(num_nodes)

Vagrant.configure(2) do |config|
  config.ssh.insert_key = false

  if Vagrant.has_plugin?("vagrant-hostmanager")
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.ignore_private_ip = false
    config.hostmanager.include_offline = true
  end

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :machine
  end

  machines.each do |machine|
    config.vm.define machine[:name] do |vmconfig|
      vmconfig.vm.box = "chef/centos-6.6"
      vmconfig.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 4
      end

      vmconfig.vm.hostname = machine[:name]
      vmconfig.vm.network :private_network, ip: machine[:ip]

      vmconfig.vm.provision "ansible" do |ansible|
        ansible.playbook = "couchbase.yml"
      end

#      vmconfig.vm.provision "ansible" do |ansible|
#        ansible.groups = {
#	  "ganglia_master" => ["cb1.benchmark"],
#	  "ganglia_monitor" => ["cb2.benchmark", "cb3.benchmark"],
#	  "all_groups:children" => ["ganglia_master", "ganglia_monitor"]
#	}
#	ansible.limit = 'all'	  
#	ansible.playbook = "ganglia.yml"
#      end
    end
  end
end

def gen_machines(num_nodes)
    short_name_fmt = "cb%d"
    domain_name = "benchmark"
    ip_start = 40
    ip_fmt = "192.168.56.%d"

    machines = Array.new
    for n in 1..num_nodes
        hostname = (short_name_fmt + "." + domain_name) % n
        ip = ip_fmt % (ip_start + n)
        machines.push({:name => hostname, :ip => ip})
    end
    return machines
end
